/* ============================================
   Mixins
============================================ */

// Creates a light shadow around the element
@mixin light-shadow {
  -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.4);
  -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.4);
  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.4);
}

@mixin absolute-full-cover {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Creates a linear gradient overlay on top of the background.
//
// WARNING: The element will be given 'position: relative', make sure that this
// does not break formatting
// $base-color      -   The base color of the background, used as a fallback if
//                      a background image is provided
// $background-url  -   OPTIONAL: The url of the background image, provide ""
//                      if you don't have one
@mixin gradient-background($color-to, $color-from, $base-color, $background-url) {
  position: relative;
  background-position: center 60%;
  background-size: cover;
  background-repeat: no-repeat;
  background-color: $base-color;
  background-image: image-url($background-url);
  &:before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to bottom, $color-to, $color-from);
  }
}

@mixin immediate-children-bottom-margins($bottom-margin) {
  > * {
    margin-bottom: $bottom-margin;
  }
  > *:last-child {
    margin-bottom: 0;
  }
}

@mixin theme-background-border-colors($base-color) {
  background-color: $base-color;
  border-color: $base-color;
  &:hover {
    background-color: darken($base-color, 10);
    border-color: darken($base-color, 15);
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-color: darken($base-color, 20);
    border-color: darken($base-color, 20);
  }
}

@mixin theme-background-border-colors-holo($base-color) {
  background-color: rgba(white, 0);
  border-color: $base-color;
  color: $base-color;
  &:hover {
    color: white;
    background-color: $base-color;
    border-color: $base-color;
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-color: darken($base-color, 20);
    border-color: darken($base-color, 20);
  }
}

@mixin focus-box-shadow($base-color) {
  &:focus {
    box-shadow: 0 0 0 0.2rem rgba($base-color, 0.5) !important;
  }
}

/* ============================================
   General Styles
============================================ */

html {
  height: 100%;
  font-size: 16px; // This is to ensure consistent sizing across different platforms
}

body {
  min-height: 100%;
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between; // This is for a "sticky footer"
  // By default, text font is set to Source Sans Pro
  font-family: "Source Sans Pro", sans-serif;
}

button, input, optgroup, select, textarea {
  // Overrides a bootstrap rule that gives
  // these elements the default font-family
  // of sans-serif
  font-family: "Source Sans Pro";
}

.standard-input {
  padding: 0 0.6rem;
  border-radius: 0.5rem;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Lato", sans-serif;
}

a {
  color: $color-secondary;
  text-decoration: none;
  -webkit-transition: all $quick-transition-time;
  -ms-transition: all $quick-transition-time;
  -moz-transition: all $quick-transition-time;
  -o-transition: all $quick-transition-time;
  transition: all $quick-transition-time;
  &:hover {
    color: darken($color-secondary, 20);
    text-decoration: none;
  }
}

ul, li {
  list-style: none;
  padding: 0;
  * > a {
    color: inherit;
  }
}

.disabling-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.6);
}

.list-inline {
  margin-left: 0;
}

.list-inline-header {
  display: inline-block;
}

.links-list {
  list-style: none;
  padding: 0;
}

.btn {
  -webkit-transition: all $quick-transition-time;
  -ms-transition: all $quick-transition-time;
  -moz-transition: all $quick-transition-time;
  -o-transition: all $quick-transition-time;
  transition: all $quick-transition-time;
}

.btn-primary {
  @include theme-background-border-colors($color-primary);
  @include focus-box-shadow($color-primary);
}

.btn-outline-primary {
  @include theme-background-border-colors-holo($color-primary);
  @include focus-box-shadow($color-primary);
}

.btn-secondary {
  @include theme-background-border-colors($color-secondary);
  @include focus-box-shadow($color-secondary);
}

.missing-img {
  background-color: $color-grey;
  background-image: image-url("pattern");
  background-repeat: no-repeat;
  background-position: center 53%;
  background-size: 70%;
  height: 15rem;
  width: 15rem;
  max-width: 100%;
  max-height: 100%;
  padding: 1.5rem;
  display: flex;
  align-items: center;
  text-align: center;
  color: white;
  font-size: 1.5rem;
  color: white;
}

.snackbar-container {
  position: fixed;
  z-index: 200;
  right: 10%;
  bottom: 1rem;
  text-align: right;
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-end;
}

.snackbar {
  position: relative;
  max-width: 30rem;
  text-align: left;
  padding-right: 2rem;
  &::before {
    z-index: -100;
    @include absolute-full-cover;
    content:"";
    background-image: image-url('close.svg');
    background-repeat: no-repeat;
    background-position: top 0.3rem right 0.3rem;
    opacity: 0;
    transition: opacity $quick-transition-time ease-out;
  }
  &:hover {
    cursor: pointer;
  }
  &:hover::before {
    opacity: 0.5;
  }
}

.alert-alert {
  @extend .alert-danger;
}

// Style Devise alert-notice the same way as Bootstrap alert-success
.alert-notice {
  @extend .alert-success;
}
